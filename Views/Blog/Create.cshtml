@model BlogNet.Models.Blog
@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@* Check if user is signed in, if false, redirect to login  *@     
@{
if (!SignInManager.IsSignedIn(User))
{            
    <meta http-equiv="refresh" content="0; url=../Identity/Account/Login">
}
}

@{
    ViewData["Title"] = "Create";
}



<h2>Create</h2>

<h4>Blog</h4>
<hr />
<div class="row">
    <form asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Time" class="control-label"></label>
                <input asp-for="Time" class="form-control" />
                <span asp-validation-for="Time" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UrlPic" class="control-label"></label>
                <input asp-for="UrlPic" class="form-control" />
                <span asp-validation-for="UrlPic" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-7">
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" style="height:185px"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </form>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
